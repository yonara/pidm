{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Murilo\\\\Documents\\\\PIDM\\\\Projetos\\\\introducao\\\\components\\\\Tocavel.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar Tocavel = function (_Component) {\n  _inherits(Tocavel, _Component);\n\n  var _super = _createSuper(Tocavel);\n\n  function Tocavel() {\n    var _this;\n\n    _classCallCheck(this, Tocavel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.acaoBotao = function () {\n      alert('Apertei!');\n    };\n\n    _this.longPress = function () {\n      alert('Pressionada longa...');\n    };\n\n    return _this;\n  }\n\n  _createClass(Tocavel, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: estilos.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: this.acaoBotao,\n        onLongPress: this.longPress,\n        underlayColor: \"#000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: estilos.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: estilos.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }\n      }, \"TouchableHighlight\"))), React.createElement(TouchableOpacity, {\n        onPress: this.acaoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: estilos.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: estilos.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, \"TouchableOpacity\"))), React.createElement(TouchableNativeFeedback, {\n        onPress: this.acaoBotao,\n        background: Platform.OS == \"android\" ? TouchableNativeFeedback.SelectableBackground : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: estilos.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: estilos.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \"TouchableNativeFeedback\"))), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.acaoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: estilos.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: estilos.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, \"TouchableWithoutFeedback\"))), React.createElement(TouchableHighlight, {\n        onPress: this.acaoBotao,\n        onLongPress: this.longPress,\n        underlayColor: \"#000\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: estilos.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: estilos.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"TouchableHighlight\"))));\n    }\n  }]);\n\n  return Tocavel;\n}(Component);\n\nexport { Tocavel as default };\nvar estilos = StyleSheet.create({\n  container: {\n    paddingTop: 0,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  botao: {\n    marginBottom: 30,\n    width: 200,\n    alignItems: 'center',\n    backgroundColor: '#2196F3'\n  },\n  textoBotao: {\n    padding: 20,\n    color: '#FFF'\n  }\n});","map":{"version":3,"sources":["C:/Users/Murilo/Documents/PIDM/Projetos/introducao/components/Tocavel.jsx"],"names":["React","Component","Tocavel","acaoBotao","alert","longPress","estilos","container","botao","textoBotao","Platform","OS","TouchableNativeFeedback","SelectableBackground","StyleSheet","create","paddingTop","flex","flexDirection","justifyContent","alignItems","marginBottom","width","backgroundColor","padding","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Platform, Alert, StyleSheet, View, Text, \r\n        TouchableHighlight, \r\n        TouchableOpacity, \r\n        TouchableNativeFeedback, \r\n        TouchableWithoutFeedback} from \"react-native\";\r\n\r\nexport default class Tocavel extends Component {\r\n        acaoBotao = ()=>{\r\n            alert('Apertei!')\r\n        }\r\n\r\n        longPress = () =>{\r\n            alert('Pressionada longa...')\r\n        }        \r\n\r\n\r\n    render(){\r\n        return(\r\n            <View style={estilos.container}>\r\n                <TouchableHighlight onPress={this.acaoBotao} onLongPress={this.longPress} underlayColor='#000'>\r\n                    <View style={estilos.botao}>\r\n                        <Text style={estilos.textoBotao}>\r\n                            TouchableHighlight\r\n                        </Text>\r\n                    </View>\r\n                </TouchableHighlight>\r\n\r\n                <TouchableOpacity onPress={this.acaoBotao}>\r\n                    <View style={estilos.botao}>\r\n                        <Text style={estilos.textoBotao}>\r\n                            TouchableOpacity\r\n                        </Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableNativeFeedback \r\n                onPress={this.acaoBotao}\r\n                background={Platform.OS==\"android\"? TouchableNativeFeedback.SelectableBackground: ''}\r\n                >\r\n                    <View style={estilos.botao}>\r\n                        <Text style={estilos.textoBotao}>\r\n                            TouchableNativeFeedback\r\n                        </Text>\r\n                    </View>\r\n                </TouchableNativeFeedback>\r\n\r\n                <TouchableWithoutFeedback onPress={this.acaoBotao}>\r\n                    <View style={estilos.botao}>\r\n                        <Text style={estilos.textoBotao}>\r\n                            TouchableWithoutFeedback\r\n                        </Text>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n\r\n                <TouchableHighlight onPress={this.acaoBotao} \r\n                onLongPress={this.longPress} \r\n                underlayColor='#000'>\r\n                    <View style={estilos.botao}>\r\n                        <Text style={estilos.textoBotao}>\r\n                            TouchableHighlight\r\n                        </Text>\r\n                    </View>\r\n                </TouchableHighlight>\r\n            </View>\r\n        )\r\n    }\r\n}    \r\n\r\nconst estilos = StyleSheet.create(\r\n    {\r\n        container: {\r\n            paddingTop:0,\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        botao:{\r\n            marginBottom: 30,\r\n            width: 200,\r\n            alignItems: 'center',\r\n            backgroundColor: '#2196F3'\r\n        },\r\n        textoBotao:{\r\n            padding: 20,\r\n            color: '#FFF'\r\n        }\r\n    }\r\n)"]},"metadata":{},"sourceType":"module"}